---
- name: Setup Python as Python 3
  file: 
    src: python3.7
    dest: /usr/bin/python3 
    state: link
    owner: root
    group: root
  become: yes

- name: Create bashrc_local
  file:
    path: ~/.bashrc_local
    state: touch

- name: Update bashrc_local for System Path
  blockinfile:
    path: ~/.bashrc_local
    marker: "### {mark} ANSIBLE MANAGED BLOCK - System Path"
    block: |
      # Put any Scripts that we want to run in our system path.
      export PATH=~/Development/Scripts:$PATH

- name: Update bashrc_local for Git Prompt
  blockinfile:
    path: ~/.bashrc_local
    marker: "### {mark} ANSIBLE MANAGED BLOCK - Git Prompt"
    block: |
      # Add the Git Branch to the Prompt
      # Show current git branch in command line
      # https://unix.stackexchange.com/questions/124407/what-color-codes-can-i-use-in-my-ps1-prompt
      parse_git_branch() {
          git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
      }
      export PS1="\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

- name: Update bashrc_local for Aliases
  blockinfile:
    path: ~/.bashrc_local
    marker: "### {mark} ANSIBLE MANAGED BLOCK - Aliases"
    block: |
      # All my really cool aliases
      alias gs='echo "git status" && git status'
      alias gac='echo "git add & commit w/message" && git add . && git commit -m $1'
      alias gpl='echo "git pull" && git pull'
      alias gps='echo "git push" && git push origin'
      alias gc='echo "git commit w/message" && git commit -m $1'
      alias gr='echo "git revert" && git reset --soft HEAD~1'

      alias sa='ssh-add ~/.ssh/id_rsa'

# The replace has to be in ticks for it to work.  Frustrating~~
# This keeps adding \n so needs some refinement.  Just leaving out for now
# - name: Format bashrc_local
#   replace:
#     path: ~/.bashrc_local
#     regexp: '(?!=.\n)(### BEGIN ANSIBLE MANAGED.*)$'
#     replace: '\n\1'

